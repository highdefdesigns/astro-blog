---
import MainLayout from '../../layouts/MainLayout.astro';
import ArticleCard from '../../components/ArticleCard.astro';
import SearchForm from '../../components/SearchForm.astro';
import Pagination from '../../components/Pagination.astro';
import { SITE_TITLE } from '../../constants';
import { getCollection } from 'astro:content';
import { ARTICLES_PER_PAGE } from '../../constants';

// use type since using typescript
import type { CollectionEntry } from 'astro:content';

// + makes query string into a number and the ! means it could be null
const currentPage: number | null = +Astro.url.searchParams.get('page')! || 1;



// use await since getCollection returns a promise
const allBlogArticles: CollectionEntry<'blog'>[] = (await getCollection('blog')).sort((a:CollectionEntry<'blog'>, b:CollectionEntry<'blog'>) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const totalPages: number = Math.ceil(allBlogArticles.length / ARTICLES_PER_PAGE);


const articlesForPage: CollectionEntry<'blog'>[] = allBlogArticles.slice((currentPage - 1) * ARTICLES_PER_PAGE, currentPage * ARTICLES_PER_PAGE)
---

<MainLayout title={SITE_TITLE}>
    <h1 class="text-2xl pb-3">All Articles</h1>

    <SearchForm/>
    <br>
    <!-- Main Grid -->
    <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
      {articlesForPage.map(article => (
        <ArticleCard article={article}/>

      ))}
     
    </div>

     <Pagination currentPage={currentPage} totalPages={totalPages}/>
</MainLayout>